package com.PRUEBA.demo;


import jdk.jfr.ContentType;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.awt.*;

@CrossOrigin("*")
@RestController
@RequestMapping(path="/tallas")

public class TallasController {

    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private TallasRepository tallasRepository;

    @CrossOrigin(origins = "*", methods = {RequestMethod.POST})
    /*@RequestMapping(method = RequestMethod.POST, path = "/add",produces = {"application/json"}
            ,consumes = {"application/json"}) // Map ONLY POST Requests*/
    @PostMapping("/add")
    public @ResponseBody Tallas addNewTallas (@RequestBody Tallas tallas){

        return tallasRepository.save(tallas);
    }

    @CrossOrigin(origins = "*", methods = {RequestMethod.GET})
    @GetMapping(path="/all") //MUESTRA TODOS LOS PRODUCTOS
    public @ResponseBody Iterable<Tallas> getAllTallas() {
        // This returns a JSON or XML with the users
        return tallasRepository.findAll();
    }

    @PutMapping(path = "/update/{id}") //Actualizar registro
    public @ResponseBody String updateTallas(@PathVariable int id, @RequestBody Tallas tallas){
        Tallas nuevo = new Tallas();
        nuevo = tallasRepository.findById(id);
        //nuevo.setId_producto(product.getId_producto());
        nuevo.setTalla_ch(tallas.getTalla_ch());
        nuevo.setTalla_m(tallas.getTalla_m());
        nuevo.setTalla_g(tallas.getTalla_g());
        tallasRepository.save(nuevo);
        return "Tallas "+tallasRepository.findById(id)+" Se ha actualizado al usuario";
    }

    @CrossOrigin(origins = "*", methods = {RequestMethod.GET})
    @GetMapping( path="/{id}" ) //MUESTRA SOLO UN PRODUCTO
    public @ResponseBody Tallas getTallas(@PathVariable int id )
    {
        return tallasRepository.findById(id);
    }

    @CrossOrigin(origins = "*", methods = {RequestMethod.DELETE})
    @DeleteMapping( "/tallas/{id}" ) //ELIMINA UN PRODUCTO
    public @ResponseBody String deleteTallas(@PathVariable Integer id )
    {
        tallasRepository.deleteById( id );
        return "usuario "+tallasRepository.findById(id)+" Se ha borrado al usuario";
    }
}
